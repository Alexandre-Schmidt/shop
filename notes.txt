Next 
=> trabalha com File-system Routing: roteamento baseados em arquivos fisicos

=> Arquivos parametrizados: 
    Quando queremos criar uma rota no NextJS que receba um parâmetro slug
    basta colocar o nome entre cochetes [id].tsx
    para pegar esse valor digitado na url basta usar o useRouter

=> As fontes são carregadas no arquivo _document.tsx (tudo que tiver lá será carregado em todas as paginas)
    na tag <Main /> é onde vão os conteudos das paginas como se fosse o root
    na tag <NextScript /> é onde carrega os javaScripts da pagina
    <style id="stitches" dangerouslySetInnerHTML={{ __html: getCssText() }} />
       para que o CSS funcione em Server-Side Rendering 

=> Como fazer com que algo rode em SSR: getServerSideProps
    em qualquer documento na pasta pages vc exporta uma função:
        export const getServerSideProps = async () => {
            return {
                props: {}
            }
        }
    eai o compotente da pagina recebe essa propriedade
    Obs: Rodando em SSR a pagina só é exibida se tudo for carregado, Não carrega em partes
    Obs: Usar o getServerSideProps somente para quando o elemento for importante ou seja tem que 
        ser carregado assim que abre a pagina ou codigo de autenticação, codigo de banco de dados etc.. 
        dados que não podem ficar visivel para o usuario

=> para pegar imagem do Stripe:
    em next.config.js 
    images: {
        domains: ['files.stripe.com'],
    }

=> Para paginas que não mudam com muita frequencia usa-se: GetStaticProps (SSG)
    cuidado, não serve para obter informação de usuario logado, cookies, codigo de banco de dados
    ele é executado quando faz a build ... Ele é bom para paginas que são iquais para todo mundo

=> Para paginas estaticas que possui paramentro usa-se getStaticPaths como na pagina de produtos que recebe um ID.
    O fallback 'blocking' ele faz com que não mostre nada em tela até ter alguma coisa para mostrar, com isso o usuario fica perdido, pois não aparece nada
    o ideal é usar como 'true' e criar um estado de loading 

=> navegação next:
    para melhor performace usa-se o componente Link por volta da ancora. com isso, não carrega tudo do total zero

=> para criar rotas no next, basta criar a pasta api na pasta pages, criar um arquivo ts e exportar a função


#USEI
=>Biblioteca de estilização https://stitches.dev/
=>Biblioteca para criar o carrosel https://keen-slider.io/
=>Stripe
    npm i stripe
    senha: @Xandao331833
    .env.local (salva a chave publica do Stripe - nesse documento coloca as variaveis ambiente, 
                aquelas que o valor mudam de acordo com o ambiente inserido - Desenvolvimento ou produção por exemplo) 
=>Axios
